version: '3'

services:
  traefik:
    image: "traefik:v2.5"
    restart: unless-stopped
    container_name: "traefik"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certificates/acme.json:/certificates/acme.json:rw"
      - "./certificates/acme-home.json:/certificates/acme-home.json:rw"
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_TOKEN}
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt-flare.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt-flare.acme.storage=/certificates/acme.json"
      - "--certificatesresolvers.letsencrypt-flare.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt-flare.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt-flare.acme.dnsChallenge.delayBeforeCheck=0"
      - "--certificatesresolvers.letsencrypt-flare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesresolvers.letsencrypt-home.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt-home.acme.storage=/certificates/acme-home.json"
      - "--certificatesresolvers.letsencrypt-home.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt-home.acme.httpChallenge.entrypoint=web"
    labels:
        # Dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.thibaut-husser.com`, `www.traefik.thibaut-husser.com`)"
      - "traefik.http.routers.dashboard.entrypoints=web, websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${AUTH_USER}"
        # Redirect homethibaut.synology.me
      # - "traefik.http.middlewares.redirect-homethibaut-to-nas.redirectregex.regex=^https://homethibaut\\.synology\\.me/(.*)"
      # - "traefik.http.middlewares.redirect-homethibaut-to-nas.redirectregex.replacement=https://nas.thibaut-husser.com/"
      # - "traefik.http.middlewares.redirect-homethibaut-to-nas.redirectregex.permanent=true"

  nginx-nas:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-nas"
    volumes:
      - ./nginx/nginx-nas.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-nas.rule=Host(`nas.thibaut-husser.com`, `www.nas.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-nas.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-nas.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-nas.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"
        # Redirect homethibaut.synology.me
      # - "traefik.http.routers.redirect-homethibaut.rule=Host(`homethibaut.synology.me`)"
      # - "traefik.http.routers.redirect-homethibaut.entrypoints=web,websecure"
      # - "traefik.http.routers.redirect-homethibaut.tls.certresolver=letsencrypt-home"
      # - "traefik.http.routers.redirect-homethibaut.middlewares=redirect-homethibaut-to-nas"
      # - "traefik.http.routers.redirect-homethibaut.priority=10"

  nginx-proxmox:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-proxmox"
    volumes:
      - ./nginx/nginx-proxmox.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-proxy.rule=Host(`proxmox.thibaut-husser.com`, `www.proxmox.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-proxy.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-proxy.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-proxy.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  # nginx-nas-video:
  #   image: nginx:1.25.2
  #   restart: unless-stopped
  #   container_name: "nginx-nas-video"
  #   volumes:
  #     - ./nginx/nginx-nas-video.conf:/etc/nginx/conf.d/default.conf
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.nginx-nas-video.rule=Host(`video.thibaut-husser.com`, `www.video.thibaut-husser.com`)"
  #     - "traefik.http.routers.nginx-nas-video.entrypoints=web,websecure"
  #     - "traefik.http.routers.nginx-nas-video.tls.certresolver=letsencrypt-flare"
  #     # - "traefik.http.routers.nginx-nas-video.middlewares=nginx-redirect-to-https"
  #     # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
  #     # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  # nginx-nas-file:
  #   image: nginx:1.25.2
  #   restart: unless-stopped
  #   container_name: "nginx-nas-file"
  #   volumes:
  #     - ./nginx/nginx-nas-file.conf:/etc/nginx/conf.d/default.conf
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.nginx-nas-file.rule=Host(`file.thibaut-husser.com`, `www.file.thibaut-husser.com`)"
  #     - "traefik.http.routers.nginx-nas-file.entrypoints=web,websecure"
  #     - "traefik.http.routers.nginx-nas-file.tls.certresolver=letsencrypt-flare"
  #     # - "traefik.http.routers.nginx-nas-file.middlewares=nginx-redirect-to-https"
  #     # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
  #     # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  nginx-cv:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-cv"
    volumes:
      - ./nginx/cv:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-cv.rule=Host(`cv.thibaut-husser.com`, `www.cv.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-cv.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-cv.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-cv.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  nginx-synapse:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-synapse"
    volumes:
      - ./nginx/nginx-synapse.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-synapse.rule=Host(`matrix.thibaut-husser.com`, `www.matrix.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-synapse.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-synapse.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-synapse.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  nginx-portainer:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-portainer"
    volumes:
      - ./nginx/nginx-portainer.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-portainer.rule=Host(`portainer.thibaut-husser.com`, `www.portainer.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-portainer.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-portainer.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-portainer.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  nginx-nextcloud:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-nextcloud"
    volumes:
      - ./nginx/nginx-nextcloud.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-nextcloud.rule=Host(`nextcloud.thibaut-husser.com`, `www.nextcloud.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-nextcloud.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-nextcloud.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-nextcloud.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"

  nginx-bitwarden:
    image: nginx:1.25.2
    restart: unless-stopped
    container_name: "nginx-bitwarden"
    volumes:
      - ./nginx/nginx-bitwarden.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-bitwarden.rule=Host(`bitwarden.thibaut-husser.com`, `www.bitwarden.thibaut-husser.com`)"
      - "traefik.http.routers.nginx-bitwarden.entrypoints=web,websecure"
      - "traefik.http.routers.nginx-bitwarden.tls.certresolver=letsencrypt-flare"
      # - "traefik.http.routers.nginx-bitwarden.middlewares=nginx-redirect-to-https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.nginx-redirect-to-https.redirectscheme.permanent=true"
